version: "3.9"

services:
  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "rootpass123"  # cambia en producciÃ³n
      MYSQL_DATABASE: "appdb"
      MYSQL_USER: "appuser"
      MYSQL_PASSWORD: "apppass"
    command: ["--default-authentication-plugin=mysql_native_password"]
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app_net
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -p$${MYSQL_ROOT_PASSWORD} --silent"]
      interval: 10s
      timeout: 5s
      retries: 6

  api:
    build: .
    container_name: flask_api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: "db"
      DB_PORT: "3306"
      DB_NAME: "appdb"
      DB_USER: "appuser"
      DB_PASS: "apppass"
    networks:
      - app_net
    expose:
      - "5000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6

  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    restart: unless-stopped
    depends_on:
      - api
    ports:
      - "3232:80"     # Acceso desde el host: http://localhost:3232
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app_net
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:80 >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6

networks:
  app_net:
    driver: bridge

volumes:
  db_data:
